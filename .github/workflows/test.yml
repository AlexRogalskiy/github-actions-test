name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
  
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ windows-latest ]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 16
      uses: actions/setup-java@v2
      with:
        java-version: '16'
        distribution: 'adopt'
        
    - name: Run Commands
      run: |
        echo "TEMP : $TEMP"
        echo "TMP  : $TMP"
        ls -ltrh c:/TEMP
        # java -XX:+PrintCommandLineFlags -Xlog:gc*:\"c:/TEMP/test-gc1-$$-%t.log\" --version
        java -XX:+PrintCommandLineFlags \
            -XX:+UseZGC \
            -Xlog:gc\*:\"c:/TEMP/app-gc-%p-%t.log\":time,uptime,level,tid,tags:filecount=5,filesize=10m \
            -XX:StartFlightRecording:filename=c:/TEMP/app.jfr,settings=default.jfc,name=app,maxsize=100m,dumponexit=true \
            -XX:FlightRecorderOptions:stackdepth=128 \
            -XX:+HeapDumpOnOutOfMemoryError \
            -XX:HeapDumpPath=c:/TEMP/app-%p.hprof \
            -XX:ErrorFile=c:/TEMP/app_hs_err_pid-%p.log \
            --version  
        ls -ltrh c:/TEMP
      shell: bash  
